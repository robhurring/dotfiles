# vim:ft=gitconfig

[alias]
  add-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; git add `f`"
  ec = config --global -e
  edit-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; $EDITOR `f`"
  ignore=!([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore
  sm = submodule
  st = status
  staged = diff --cached
  tar = "!f(){ git archive --format=tgz --prefix=$(basename $PWD)/ HEAD; }; f"
  serve = daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

# ===> assume
  assume   = update-index --assume-unchanged
  assumeall = "!git diff --name-only | xargs git assume"
  assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
  fassume   = "!git update-index --assume-unchanged $(git diff --name-only|fzf)"
  funassume = "!git update-index --no-assume-unchanged $(git ls-files -v | grep ^h | cut -c 3-|fzf)"
  unassume = update-index --no-assume-unchanged
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"

# ===> logs
  changelog ="!git l $(git last-tag)..HEAD"
  cl = "!f() { DEFAULT=$(git default); B=${1-$DEFAULT}; H=${2-HEAD}; echo \"\\033[1;30;48;5;141mCommits between \\033[1;38;5;7m$B..$H\\033[0m\"; git commits $B..$H; }; f"
  commits = log --pretty=format':%C(bold yellow)%h%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  l = log --graph --decorate --pretty=format':%C(bold yellow)%h%C(bold blue)%d%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  lg = log -p
  ll = log --numstat --graph --pretty=format':%C(bold yellow)%h%C(bold blue)%d%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  ls = ls-files
  merges = log --merges --pretty=format':%C(bold yellow)%h%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  search = "log --all  --pretty=oneline -S"
  what = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  who = shortlog -sne --no-merges

# ===> branches
  br = branch
  brt = branch-time
  cleanup = "!f() { DEFAULT=$(git default); git branch --merged ${1-$DEFAULT} | grep -v " ${1-$DEFAULT}$" | xargs git branch -d; }; f"
  current-branch = rev-parse --abbrev-ref HEAD
  default = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'

# ===> commit
  amend = "commit --amend --no-edit"
  unamend = git reset --soft HEAD@{1}
  ci = commit
  cia = commit -a
  co = checkout
  cp = cherry-pick
  ds = diff --stat
  empty = commit --allow-empty -m
  push-set = push -u
  citag = "!f() { TAG=$1 MSG=\"${*:2}\"; echo \"\\033[1;30;48;5;141m$TAG - \\033[1;38;5;7m$MSG\\033[0m\"; git commit -qm \"[$TAG] - $MSG\"; }; f"
  wip = citag wip
  fix = citag fix
  wipe = !git citag wipe savepoint && git reset HEAD~1 --hard

# ===> sync
  fa = fetch --all
  gr = grep -n
  last-tag = describe --abbrev=0
  new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
  reset-all = !sh -c 'git add --all && git reset --hard'
  undo = reset HEAD~1 --mixed
  up = "!f() { BASE=\"${1:-master}\"; git fetch --all && git rebase $BASE; }; f"

# ===> merging
  resolve = mergetool
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = cyan
[color "diff"]
  meta = black white
  frag = blue
  old = red
  new = green
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = red
[color "interactive"]
  prompt = cyan bold
  header = yellow
  help = yellow
  error = red bold
[core]
  whitespace = space-before-tab,tabwidth=2,trailing-space
  editor = "nvim"
  excludesfile = ~/.gitignore
[help]
  autocorrect = 1
[status]
  submodule = 1
  short = true
  branch = true
  showStash = true
  showUntrackedFiles = all
[push]
  default = upstream
[user]
  name = robhurring
  email = robhurring@gmail.com
  signingkey=5C33DE2A
[credential]
  helper = osxkeychain
[instaweb]
  local = true
  httpd = webrick
  port = 8080
[browser "ch"]
  cmd = open
[web]
  browser = ch
[merge]
  tool = diffmerge
  guitool = diffmerge
[mergetool "opendiff"]
  cmd = opendiff $LOCAL $REMOTE -ancestor $BASE -merge $MERGED
[mergetool "editor"]
  # cmd = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
  cmd = nvim -f -c "Gdiffsplit!" "$MERGED"
[mergetool "diffmerge"]
  cmd = diffmerge --merge --result="$MERGED" "$LOCAL" "$BASE" "$REMOTE"
  trustExitCode = true
[diff]
  tool = nvimdiff
  guitool = diffmerge
[difftool "nvimdiff"]
  cmd = nvim -d $BASE $LOCAL
[difftool "opendiff"]
  cmd = opendiff $LOCAL $REMOTE -merge $MERGED
[difftool "diffmerge"]
  cmd = diffmerge "$LOCAL" "$REMOTE"
[url "git@github.com:"]
  insteadOf = "gh:"
  insteadOf = "git://github.com/"
[url "git@gist.github.com:"]
  insteadOf = "gist:"
[mailmap]
  file = ~/.mailmap
[github]
  user = robhurring
[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
[rerere]
  enabled = true
[rebase]
  stat = true
  autostash = true
  abbreviateCommands = true
[commit]
  gpgsign = true
[sync]
  cleanup = true
[pull]
  ff = only
[gpg]
	program = gpg
