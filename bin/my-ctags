#! /usr/bin/env bash
# See: http://raygrasso.com/posts/2015/04/using-ctags-on-modern-javascript.html
# set -e

# logging, if needed
# LOG=/dev/null
CTAGS=/usr/local/bin/ctags
LOG=/tmp/ctags-debug.txt

# set to "1" to filter the tags
FILTER_TAGS=${FILTER_TAGS:0}
TAG_BUNDLE=1

FILE=""

echo "[ARGS] $@" >> $LOG

# detect file and strip some custom options out
for opt in "$@"; do
  case "$opt" in
    -f)
      FILE="$2"
      ;;
    --skip-bundle)
      TAG_BUNDLE=0
      shift
      ;;
    --filter-tags)
      FILTER_TAGS=1
      shift
      ;;
  esac
done

ARGS="$@"

# default file if not given
if [[ "$FILE" == "" ]]; then
  if [[ -d "./.git" ]]; then
    FILE=".git/tags"
  else
    FILE="tags"
  fi
  ARGS="-f $FILE ${ARGS}"
fi

# root ctag command
CTAGGER="${CTAGS} ${ARGS}"

# clear log
echo "[tagging] `pwd`" >$LOG
echo "[bundle?] $TAG_BUNDLE" >$LOG
echo "[cmd] $CTAGGER" >>$LOG

# code tagging
$CTAGGER 2>>$LOG

# optionally tag bundle
if [[ (-f Gemfile) && $TAG_BUNDLE -eq 1 ]]; then
  # load rvm if present
  if [[ (-f ".ruby-gemset") || (-f ".ruby-version") || (-f ".rvmrc") ]]; then
    source "$rvm_path/scripts/rvm"
    rvm use . >> $LOG
  fi
  echo "[tagging] bundle" >> $LOG

  bundle_paths=$(bundle show --paths 2>>$LOG)
  if [[ $? -eq 0 ]]; then
    BUNDLETAGGER="${CTAGGER} -a ${bundle_paths}"
    echo "[cmd] ${BUNDLETAGGER}">>$LOG
    # $CTAGS $ARGS -a $bundle_paths 2>>$LOG
    $BUNDLETAGGER 2>> $LOG
  else
    echo "[FAIL!] ${bundle_paths}" >> $LOG
  fi
else
  echo "[skipping] bundle" >> $LOG
fi

# ctags doesn't handle negative look behinds so instead this script
# strips false positives out of a tags file.
if [[ $FILTER_TAGS -eq 1 ]]; then
  # Filter out false matches from class method regex
  echo "[filter:$FILE] false matches - class methods" >> $LOG
  sed -i '' -E '/^(if|switch|function|module\.exports|it|describe)    .+language:js$/d' $FILE

  # Filter out false matches from object definition regex
  echo "[filter:$FILE] false matches - object definitions" >> $LOG
  sed -i '' -E '/var[     ]+[a-zA-Z0-9_$]+[   ]+=[    ]+require\(.+language:js$/d' $FILE
fi

