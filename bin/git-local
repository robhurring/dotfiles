#!/usr/bin/env sh

GIT_LOCAL_ROOT=${GIT_LOCAL_ROOT:-"$HOME/Dropbox/Git"}
PWD=$(pwd)
REMOTE_NAME="local"

colorize() {
  printf "\033[${1}m${2}\033[0m\n" "${@:3}"
}

error() {
  colorize "1;31" "$@"
}

success() {
  colorize "1;32" "$@"
}

run() {
  local cmd="$*"
  colorize "1;30" "$ \e[0;37m%s" "$cmd"
  eval "$cmd"
}

check_git_dir() {
  if [ ! -d "$PWD/.git" ]; then
    error "fatal: Not a git repository (or any of the parent directories): .git"
    exit 1
  fi
}

init() {
  local name=${1:-${PWD##*/}}
  local path="${GIT_LOCAL_ROOT}/${name}"

  run "git init --bare ${path}"
  add_local_remote "$path"
}

clone() {
  local name="$1"
  local path="${GIT_LOCAL_ROOT}/${name}"
  shift

  if [ -z "$name" ]; then
    usage
  fi

  if [ ! -d "$path" ]; then
    error "fatal: No such project exists '${path}'"
    exit 2
  fi

  run "git clone ${path} $*"
}

list() {
  local path="${GIT_LOCAL_ROOT}"
  for repo in $(ls "$path"); do
    printf "* %s\n" "$repo"
  done
}

add_local_remote() {
  local url="$1"

  run "git remote add ${REMOTE_NAME} ${url}"
}

usage() {
  echo "Usage: $(basename "$0") [COMMAND]"
  echo
  echo "  init [<name>]       - Initialize repo"
  echo
  echo "  clone [<args>]      - Clone repo"
  echo
  exit 1
}

# main

case "$1" in
  init)
    shift
    check_git_dir
    init "$@"
    ;;
  clone)
    shift
    clone "$@"
    ;;
  ls)
    shift
    list
    ;;
  -h|--help|*)
    usage
    ;;
esac
